@use '../../fonts';
@use '../../colors';
@use './header.fragment' as header;
@use './text-shadow.fragment' as text-shadow;

.resultsList {
  $max-width: 50rem;

  height: 100vh;

  margin: 1rem 0 0;
  padding: header.$height max(3rem, calc((100vw - #{$max-width}) / 2)) 2rem;
  box-sizing: border-box;

  @media (max-width: 760px) {
    padding-top: header.$height-mobile;
  }
  @media (max-width: 500px) {
    padding-right: 2rem;
    padding-left: 2rem;
  }

  list-style: none;
  overflow-y: auto;

  &:empty {
    &:after {
      content: 'Keine Einträge gefunden.';
      display: block;
      text-align: center;

      font-style: italic;
      @include colors.color(color, text, .5);
    }
  }

  a {
    text-decoration: inherit;
    color: inherit;
    cursor: pointer;
  }

  .result {
    margin-top: 1rem;
    margin-bottom: 2rem;
    display: flex;
    flex-direction: column;
    align-items: flex-start;

    &.law {
      display: block;

      .resultHeading {
        display: inline;
        margin-right: .2rem;

        @include fonts.heading;
        font: {
          size: 1.5rem;
          style: normal;
        }
      }

      .fullTitle:before {
        content: ' — ';
      }
    }
  }

  .directResult {
    $margin-bottom: 3rem;
    position: relative;
    margin-bottom: $margin-bottom;

    &:after {
      content: '';
      $lines-distance: 2px;
      $lines-width: 1px;

      position: absolute;
      bottom: calc(#{$margin-bottom} / -2);

      height: $lines-distance;
      width: 100%;

      border-width: 0;
      border-top-width: 1px;
      border-bottom-width: 1px;
      border-style: solid;
      @include colors.color(border-color, text)
    }
  }

  .resultHeading {
    margin-top: 0;
    margin-bottom: .5rem;

    $text-shadow-spread-x: 3;
    $text-shadow-spread-y: 1;

    $background-color: colors.light(background);
    text-shadow: text-shadow.make-text-shadow($background-color, $text-shadow-spread-x, $text-shadow-spread-y);

    @media (prefers-color-scheme: dark) {
      $background-color: colors.dark(background);
      text-shadow: text-shadow.make-text-shadow($background-color, $text-shadow-spread-x, $text-shadow-spread-y);
    }

    .main {
      position: relative;

      &:before {
        content: '';
        position: absolute;
        bottom: 1px;

        width: 100%;
        height: 2px;

        @include colors.color(background, text);

        z-index: -1;
      }
    }

    @include fonts.sup-heading;
    font-size: 1.5rem;

    .appendix {
      @include fonts.text;
      font-style: normal;

      opacity: .5;

      &:before {
        content: ' — ';
      }
    }
  }

  .excerpt, .fullTitle {
    &, * {
      @include colors.color(color, text, .4)
    }
  }

  .excerpt {
    // fading at the sides of the text
    $fade-width: 3rem;
    $black-to-black: linear-gradient(black, black);
    mask: {
      image: linear-gradient(to right, transparent, black), $black-to-black, linear-gradient(to left, transparent, black);
      size: $fade-width 100%, calc(100% - #{$fade-width} * 2) 100%, $fade-width 100%;
      repeat: no-repeat;
      position: left center, center center, right center;
    }

    &.sharpLeft {
      mask-image: $black-to-black, $black-to-black, linear-gradient(to left, transparent, black);
    }

    &.sharpRight {
      mask-image: linear-gradient(to right, transparent, black), $black-to-black, $black-to-black;
    }
  }
}
